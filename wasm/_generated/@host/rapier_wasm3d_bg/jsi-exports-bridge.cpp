//
// THIS FILE WAS GENERATED BY `react-native-wasm`
//
// DO NOT EDIT THIS FILE. ANY CHANGES WILL BE LOST.
//

#include <ReactNativePolygen/gen-utils.h>
#include <ReactNativePolygen/Memory.h>
#include "jsi-exports-bridge.h"
#include "wasm-rt.h"


double getNumericVal(const facebook::jsi::Value& val) {
  if (val.isBool()) {
    return (double)val.asBool();
  }
  return val.asNumber();
}
  

namespace facebook::react {
  std::shared_ptr<Rapier__wasm3d__bgModuleContext> getRapier__wasm3d__bgModuleContextContext(jsi::Runtime& rt, const jsi::Value& val) {
    auto obj = val.asObject(rt);
    assert(obj.hasNativeState(rt));
    auto ctx = std::dynamic_pointer_cast<Rapier__wasm3d__bgModuleContext>(obj.getNativeState(rt));
    assert(ctx != nullptr);
    return ctx;
  }

  jsi::Object createRapier__wasm3d__bgExports(jsi::Runtime &rt, jsi::Object&& importObject) {
    jsi::Object mod { rt };

    if (!wasm_rt_is_initialized()) {
      wasm_rt_init();
    }

    auto inst = std::make_shared<Rapier__wasm3d__bgModuleContext>(rt, std::move(importObject));
    wasm2c_rapier__wasm3d__bg_instantiate(&inst->rootCtx, &inst->import_wbgCtx);

    mod.setNativeState(rt, inst);

    // Memories
    jsi::Object memories {rt};
    
  /* exported memory: 'memory' */
  {
    jsi::Object holder {rt};
    auto memory = std::make_shared<Memory>(w2c_rapier__wasm3d__bg_memory(&inst->rootCtx));
    holder.setNativeState(rt, std::move(memory));
    memories.setProperty(rt, "memory", std::move(holder));
  }

    mod.setProperty(rt, "memories", std::move(memories));

    // Exported functions
    jsi::Object exports {rt};
    
  /* export: 'version' */
  exports.setProperty(rt, "version", HOSTFN("version", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_version(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawkinematiccharactercontroller_free' */
  exports.setProperty(rt, "__wbg_rawkinematiccharactercontroller_free", HOSTFN("__wbg_rawkinematiccharactercontroller_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawkinematiccharactercontroller_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_new' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_new", HOSTFN("rawkinematiccharactercontroller_new", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_new(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_up' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_up", HOSTFN("rawkinematiccharactercontroller_up", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_up(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_setUp' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_setUp", HOSTFN("rawkinematiccharactercontroller_setUp", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_setUp(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_offset' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_offset", HOSTFN("rawkinematiccharactercontroller_offset", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_offset(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_setOffset' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_setOffset", HOSTFN("rawkinematiccharactercontroller_setOffset", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_setOffset(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_slideEnabled' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_slideEnabled", HOSTFN("rawkinematiccharactercontroller_slideEnabled", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_slideEnabled(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_setSlideEnabled' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_setSlideEnabled", HOSTFN("rawkinematiccharactercontroller_setSlideEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_setSlideEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_autostepMaxHeight' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_autostepMaxHeight", HOSTFN("rawkinematiccharactercontroller_autostepMaxHeight", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_autostepMaxHeight(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_autostepMinWidth' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_autostepMinWidth", HOSTFN("rawkinematiccharactercontroller_autostepMinWidth", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_autostepMinWidth(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_autostepIncludesDynamicBodies' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_autostepIncludesDynamicBodies", HOSTFN("rawkinematiccharactercontroller_autostepIncludesDynamicBodies", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_autostepIncludesDynamicBodies(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_autostepEnabled' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_autostepEnabled", HOSTFN("rawkinematiccharactercontroller_autostepEnabled", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_autostepEnabled(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_enableAutostep' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_enableAutostep", HOSTFN("rawkinematiccharactercontroller_enableAutostep", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_enableAutostep(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_disableAutostep' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_disableAutostep", HOSTFN("rawkinematiccharactercontroller_disableAutostep", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_disableAutostep(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_maxSlopeClimbAngle' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_maxSlopeClimbAngle", HOSTFN("rawkinematiccharactercontroller_maxSlopeClimbAngle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_maxSlopeClimbAngle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_setMaxSlopeClimbAngle' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_setMaxSlopeClimbAngle", HOSTFN("rawkinematiccharactercontroller_setMaxSlopeClimbAngle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_setMaxSlopeClimbAngle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_minSlopeSlideAngle' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_minSlopeSlideAngle", HOSTFN("rawkinematiccharactercontroller_minSlopeSlideAngle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_minSlopeSlideAngle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_setMinSlopeSlideAngle' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_setMinSlopeSlideAngle", HOSTFN("rawkinematiccharactercontroller_setMinSlopeSlideAngle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_setMinSlopeSlideAngle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_snapToGroundDistance' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_snapToGroundDistance", HOSTFN("rawkinematiccharactercontroller_snapToGroundDistance", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_snapToGroundDistance(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_enableSnapToGround' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_enableSnapToGround", HOSTFN("rawkinematiccharactercontroller_enableSnapToGround", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_enableSnapToGround(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_disableSnapToGround' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_disableSnapToGround", HOSTFN("rawkinematiccharactercontroller_disableSnapToGround", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_disableSnapToGround(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_snapToGroundEnabled' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_snapToGroundEnabled", HOSTFN("rawkinematiccharactercontroller_snapToGroundEnabled", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_snapToGroundEnabled(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_computeColliderMovement' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_computeColliderMovement", HOSTFN("rawkinematiccharactercontroller_computeColliderMovement", 14) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_computeColliderMovement(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawkinematiccharactercontroller_computedMovement' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_computedMovement", HOSTFN("rawkinematiccharactercontroller_computedMovement", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_computedMovement(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_computedGrounded' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_computedGrounded", HOSTFN("rawkinematiccharactercontroller_computedGrounded", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_computedGrounded(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_numComputedCollisions' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_numComputedCollisions", HOSTFN("rawkinematiccharactercontroller_numComputedCollisions", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_numComputedCollisions(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawkinematiccharactercontroller_computedCollision' */
  exports.setProperty(rt, "rawkinematiccharactercontroller_computedCollision", HOSTFN("rawkinematiccharactercontroller_computedCollision", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawkinematiccharactercontroller_computedCollision(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawcharactercollision_free' */
  exports.setProperty(rt, "__wbg_rawcharactercollision_free", HOSTFN("__wbg_rawcharactercollision_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawcharactercollision_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcharactercollision_new' */
  exports.setProperty(rt, "rawcharactercollision_new", HOSTFN("rawcharactercollision_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_handle' */
  exports.setProperty(rt, "rawcharactercollision_handle", HOSTFN("rawcharactercollision_handle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_handle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_translationApplied' */
  exports.setProperty(rt, "rawcharactercollision_translationApplied", HOSTFN("rawcharactercollision_translationApplied", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_translationApplied(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_translationRemaining' */
  exports.setProperty(rt, "rawcharactercollision_translationRemaining", HOSTFN("rawcharactercollision_translationRemaining", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_translationRemaining(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_toi' */
  exports.setProperty(rt, "rawcharactercollision_toi", HOSTFN("rawcharactercollision_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_worldWitness1' */
  exports.setProperty(rt, "rawcharactercollision_worldWitness1", HOSTFN("rawcharactercollision_worldWitness1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_worldWitness1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_worldWitness2' */
  exports.setProperty(rt, "rawcharactercollision_worldWitness2", HOSTFN("rawcharactercollision_worldWitness2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_worldWitness2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_worldNormal1' */
  exports.setProperty(rt, "rawcharactercollision_worldNormal1", HOSTFN("rawcharactercollision_worldNormal1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_worldNormal1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcharactercollision_worldNormal2' */
  exports.setProperty(rt, "rawcharactercollision_worldNormal2", HOSTFN("rawcharactercollision_worldNormal2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcharactercollision_worldNormal2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawccdsolver_free' */
  exports.setProperty(rt, "__wbg_rawccdsolver_free", HOSTFN("__wbg_rawccdsolver_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawccdsolver_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawccdsolver_new' */
  exports.setProperty(rt, "rawccdsolver_new", HOSTFN("rawccdsolver_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawccdsolver_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointType' */
  exports.setProperty(rt, "rawimpulsejointset_jointType", HOSTFN("rawimpulsejointset_jointType", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointType(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointBodyHandle1' */
  exports.setProperty(rt, "rawimpulsejointset_jointBodyHandle1", HOSTFN("rawimpulsejointset_jointBodyHandle1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointBodyHandle1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointBodyHandle2' */
  exports.setProperty(rt, "rawimpulsejointset_jointBodyHandle2", HOSTFN("rawimpulsejointset_jointBodyHandle2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointBodyHandle2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointFrameX1' */
  exports.setProperty(rt, "rawimpulsejointset_jointFrameX1", HOSTFN("rawimpulsejointset_jointFrameX1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointFrameX1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointFrameX2' */
  exports.setProperty(rt, "rawimpulsejointset_jointFrameX2", HOSTFN("rawimpulsejointset_jointFrameX2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointFrameX2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointAnchor1' */
  exports.setProperty(rt, "rawimpulsejointset_jointAnchor1", HOSTFN("rawimpulsejointset_jointAnchor1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointAnchor1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointAnchor2' */
  exports.setProperty(rt, "rawimpulsejointset_jointAnchor2", HOSTFN("rawimpulsejointset_jointAnchor2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointAnchor2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointSetAnchor1' */
  exports.setProperty(rt, "rawimpulsejointset_jointSetAnchor1", HOSTFN("rawimpulsejointset_jointSetAnchor1", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointSetAnchor1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointSetAnchor2' */
  exports.setProperty(rt, "rawimpulsejointset_jointSetAnchor2", HOSTFN("rawimpulsejointset_jointSetAnchor2", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointSetAnchor2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointContactsEnabled' */
  exports.setProperty(rt, "rawimpulsejointset_jointContactsEnabled", HOSTFN("rawimpulsejointset_jointContactsEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointContactsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointSetContactsEnabled' */
  exports.setProperty(rt, "rawimpulsejointset_jointSetContactsEnabled", HOSTFN("rawimpulsejointset_jointSetContactsEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointSetContactsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointLimitsEnabled' */
  exports.setProperty(rt, "rawimpulsejointset_jointLimitsEnabled", HOSTFN("rawimpulsejointset_jointLimitsEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointLimitsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointLimitsMin' */
  exports.setProperty(rt, "rawimpulsejointset_jointLimitsMin", HOSTFN("rawimpulsejointset_jointLimitsMin", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointLimitsMin(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointLimitsMax' */
  exports.setProperty(rt, "rawimpulsejointset_jointLimitsMax", HOSTFN("rawimpulsejointset_jointLimitsMax", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_jointLimitsMax(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_jointSetLimits' */
  exports.setProperty(rt, "rawimpulsejointset_jointSetLimits", HOSTFN("rawimpulsejointset_jointSetLimits", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointSetLimits(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointConfigureMotorModel' */
  exports.setProperty(rt, "rawimpulsejointset_jointConfigureMotorModel", HOSTFN("rawimpulsejointset_jointConfigureMotorModel", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointConfigureMotorModel(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointConfigureMotorVelocity' */
  exports.setProperty(rt, "rawimpulsejointset_jointConfigureMotorVelocity", HOSTFN("rawimpulsejointset_jointConfigureMotorVelocity", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointConfigureMotorVelocity(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointConfigureMotorPosition' */
  exports.setProperty(rt, "rawimpulsejointset_jointConfigureMotorPosition", HOSTFN("rawimpulsejointset_jointConfigureMotorPosition", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointConfigureMotorPosition(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_jointConfigureMotor' */
  exports.setProperty(rt, "rawimpulsejointset_jointConfigureMotor", HOSTFN("rawimpulsejointset_jointConfigureMotor", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_jointConfigureMotor(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawimpulsejointset_free' */
  exports.setProperty(rt, "__wbg_rawimpulsejointset_free", HOSTFN("__wbg_rawimpulsejointset_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawimpulsejointset_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_new' */
  exports.setProperty(rt, "rawimpulsejointset_new", HOSTFN("rawimpulsejointset_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_createJoint' */
  exports.setProperty(rt, "rawimpulsejointset_createJoint", HOSTFN("rawimpulsejointset_createJoint", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_createJoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_remove' */
  exports.setProperty(rt, "rawimpulsejointset_remove", HOSTFN("rawimpulsejointset_remove", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_remove(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_len' */
  exports.setProperty(rt, "rawimpulsejointset_len", HOSTFN("rawimpulsejointset_len", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_len(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_contains' */
  exports.setProperty(rt, "rawimpulsejointset_contains", HOSTFN("rawimpulsejointset_contains", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawimpulsejointset_contains(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawimpulsejointset_forEachJointHandle' */
  exports.setProperty(rt, "rawimpulsejointset_forEachJointHandle", HOSTFN("rawimpulsejointset_forEachJointHandle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_forEachJointHandle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawimpulsejointset_forEachJointAttachedToRigidBody' */
  exports.setProperty(rt, "rawimpulsejointset_forEachJointAttachedToRigidBody", HOSTFN("rawimpulsejointset_forEachJointAttachedToRigidBody", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawimpulsejointset_forEachJointAttachedToRigidBody(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawintegrationparameters_free' */
  exports.setProperty(rt, "__wbg_rawintegrationparameters_free", HOSTFN("__wbg_rawintegrationparameters_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawintegrationparameters_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_new' */
  exports.setProperty(rt, "rawintegrationparameters_new", HOSTFN("rawintegrationparameters_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_dt' */
  exports.setProperty(rt, "rawintegrationparameters_dt", HOSTFN("rawintegrationparameters_dt", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_dt(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_allowedLinearError' */
  exports.setProperty(rt, "rawintegrationparameters_allowedLinearError", HOSTFN("rawintegrationparameters_allowedLinearError", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_allowedLinearError(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_predictionDistance' */
  exports.setProperty(rt, "rawintegrationparameters_predictionDistance", HOSTFN("rawintegrationparameters_predictionDistance", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_predictionDistance(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_maxVelocityIterations' */
  exports.setProperty(rt, "rawintegrationparameters_maxVelocityIterations", HOSTFN("rawintegrationparameters_maxVelocityIterations", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_maxVelocityIterations(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_maxVelocityFrictionIterations' */
  exports.setProperty(rt, "rawintegrationparameters_maxVelocityFrictionIterations", HOSTFN("rawintegrationparameters_maxVelocityFrictionIterations", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_maxVelocityFrictionIterations(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_maxStabilizationIterations' */
  exports.setProperty(rt, "rawintegrationparameters_maxStabilizationIterations", HOSTFN("rawintegrationparameters_maxStabilizationIterations", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_maxStabilizationIterations(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_minIslandSize' */
  exports.setProperty(rt, "rawintegrationparameters_minIslandSize", HOSTFN("rawintegrationparameters_minIslandSize", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_minIslandSize(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_maxCcdSubsteps' */
  exports.setProperty(rt, "rawintegrationparameters_maxCcdSubsteps", HOSTFN("rawintegrationparameters_maxCcdSubsteps", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_maxCcdSubsteps(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_set_dt' */
  exports.setProperty(rt, "rawintegrationparameters_set_dt", HOSTFN("rawintegrationparameters_set_dt", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_dt(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_erp' */
  exports.setProperty(rt, "rawintegrationparameters_set_erp", HOSTFN("rawintegrationparameters_set_erp", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_erp(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_allowedLinearError' */
  exports.setProperty(rt, "rawintegrationparameters_set_allowedLinearError", HOSTFN("rawintegrationparameters_set_allowedLinearError", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_allowedLinearError(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_predictionDistance' */
  exports.setProperty(rt, "rawintegrationparameters_set_predictionDistance", HOSTFN("rawintegrationparameters_set_predictionDistance", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_predictionDistance(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_maxVelocityIterations' */
  exports.setProperty(rt, "rawintegrationparameters_set_maxVelocityIterations", HOSTFN("rawintegrationparameters_set_maxVelocityIterations", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_maxVelocityIterations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_maxVelocityFrictionIterations' */
  exports.setProperty(rt, "rawintegrationparameters_set_maxVelocityFrictionIterations", HOSTFN("rawintegrationparameters_set_maxVelocityFrictionIterations", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_maxVelocityFrictionIterations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_maxStabilizationIterations' */
  exports.setProperty(rt, "rawintegrationparameters_set_maxStabilizationIterations", HOSTFN("rawintegrationparameters_set_maxStabilizationIterations", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_maxStabilizationIterations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_minIslandSize' */
  exports.setProperty(rt, "rawintegrationparameters_set_minIslandSize", HOSTFN("rawintegrationparameters_set_minIslandSize", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_minIslandSize(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawintegrationparameters_set_maxCcdSubsteps' */
  exports.setProperty(rt, "rawintegrationparameters_set_maxCcdSubsteps", HOSTFN("rawintegrationparameters_set_maxCcdSubsteps", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawintegrationparameters_set_maxCcdSubsteps(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawislandmanager_free' */
  exports.setProperty(rt, "__wbg_rawislandmanager_free", HOSTFN("__wbg_rawislandmanager_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawislandmanager_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawislandmanager_new' */
  exports.setProperty(rt, "rawislandmanager_new", HOSTFN("rawislandmanager_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawislandmanager_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawislandmanager_forEachActiveRigidBodyHandle' */
  exports.setProperty(rt, "rawislandmanager_forEachActiveRigidBodyHandle", HOSTFN("rawislandmanager_forEachActiveRigidBodyHandle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawislandmanager_forEachActiveRigidBodyHandle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawgenericjoint_free' */
  exports.setProperty(rt, "__wbg_rawgenericjoint_free", HOSTFN("__wbg_rawgenericjoint_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawgenericjoint_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawgenericjoint_spherical' */
  exports.setProperty(rt, "rawgenericjoint_spherical", HOSTFN("rawgenericjoint_spherical", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawgenericjoint_spherical(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawgenericjoint_prismatic' */
  exports.setProperty(rt, "rawgenericjoint_prismatic", HOSTFN("rawgenericjoint_prismatic", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawgenericjoint_prismatic(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawgenericjoint_fixed' */
  exports.setProperty(rt, "rawgenericjoint_fixed", HOSTFN("rawgenericjoint_fixed", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawgenericjoint_fixed(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawgenericjoint_revolute' */
  exports.setProperty(rt, "rawgenericjoint_revolute", HOSTFN("rawgenericjoint_revolute", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawgenericjoint_revolute(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointType' */
  exports.setProperty(rt, "rawmultibodyjointset_jointType", HOSTFN("rawmultibodyjointset_jointType", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointType(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointFrameX1' */
  exports.setProperty(rt, "rawmultibodyjointset_jointFrameX1", HOSTFN("rawmultibodyjointset_jointFrameX1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointFrameX1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointFrameX2' */
  exports.setProperty(rt, "rawmultibodyjointset_jointFrameX2", HOSTFN("rawmultibodyjointset_jointFrameX2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointFrameX2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointAnchor1' */
  exports.setProperty(rt, "rawmultibodyjointset_jointAnchor1", HOSTFN("rawmultibodyjointset_jointAnchor1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointAnchor1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointAnchor2' */
  exports.setProperty(rt, "rawmultibodyjointset_jointAnchor2", HOSTFN("rawmultibodyjointset_jointAnchor2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointAnchor2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointContactsEnabled' */
  exports.setProperty(rt, "rawmultibodyjointset_jointContactsEnabled", HOSTFN("rawmultibodyjointset_jointContactsEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointContactsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointSetContactsEnabled' */
  exports.setProperty(rt, "rawmultibodyjointset_jointSetContactsEnabled", HOSTFN("rawmultibodyjointset_jointSetContactsEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointSetContactsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawmultibodyjointset_jointLimitsEnabled' */
  exports.setProperty(rt, "rawmultibodyjointset_jointLimitsEnabled", HOSTFN("rawmultibodyjointset_jointLimitsEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointLimitsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointLimitsMin' */
  exports.setProperty(rt, "rawmultibodyjointset_jointLimitsMin", HOSTFN("rawmultibodyjointset_jointLimitsMin", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointLimitsMin(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_jointLimitsMax' */
  exports.setProperty(rt, "rawmultibodyjointset_jointLimitsMax", HOSTFN("rawmultibodyjointset_jointLimitsMax", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_jointLimitsMax(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawmultibodyjointset_free' */
  exports.setProperty(rt, "__wbg_rawmultibodyjointset_free", HOSTFN("__wbg_rawmultibodyjointset_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawmultibodyjointset_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawmultibodyjointset_new' */
  exports.setProperty(rt, "rawmultibodyjointset_new", HOSTFN("rawmultibodyjointset_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_createJoint' */
  exports.setProperty(rt, "rawmultibodyjointset_createJoint", HOSTFN("rawmultibodyjointset_createJoint", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_createJoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_remove' */
  exports.setProperty(rt, "rawmultibodyjointset_remove", HOSTFN("rawmultibodyjointset_remove", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawmultibodyjointset_remove(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawmultibodyjointset_contains' */
  exports.setProperty(rt, "rawmultibodyjointset_contains", HOSTFN("rawmultibodyjointset_contains", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawmultibodyjointset_contains(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawmultibodyjointset_forEachJointHandle' */
  exports.setProperty(rt, "rawmultibodyjointset_forEachJointHandle", HOSTFN("rawmultibodyjointset_forEachJointHandle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawmultibodyjointset_forEachJointHandle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawmultibodyjointset_forEachJointAttachedToRigidBody' */
  exports.setProperty(rt, "rawmultibodyjointset_forEachJointAttachedToRigidBody", HOSTFN("rawmultibodyjointset_forEachJointAttachedToRigidBody", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawmultibodyjointset_forEachJointAttachedToRigidBody(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbTranslation' */
  exports.setProperty(rt, "rawrigidbodyset_rbTranslation", HOSTFN("rawrigidbodyset_rbTranslation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbRotation' */
  exports.setProperty(rt, "rawrigidbodyset_rbRotation", HOSTFN("rawrigidbodyset_rbRotation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSleep' */
  exports.setProperty(rt, "rawrigidbodyset_rbSleep", HOSTFN("rawrigidbodyset_rbSleep", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSleep(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbIsSleeping' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsSleeping", HOSTFN("rawrigidbodyset_rbIsSleeping", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsSleeping(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbIsMoving' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsMoving", HOSTFN("rawrigidbodyset_rbIsMoving", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsMoving(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbNextTranslation' */
  exports.setProperty(rt, "rawrigidbodyset_rbNextTranslation", HOSTFN("rawrigidbodyset_rbNextTranslation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbNextTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbNextRotation' */
  exports.setProperty(rt, "rawrigidbodyset_rbNextRotation", HOSTFN("rawrigidbodyset_rbNextRotation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbNextRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetTranslation' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetTranslation", HOSTFN("rawrigidbodyset_rbSetTranslation", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetRotation' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetRotation", HOSTFN("rawrigidbodyset_rbSetRotation", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetLinvel' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetLinvel", HOSTFN("rawrigidbodyset_rbSetLinvel", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetLinvel(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetAngvel' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetAngvel", HOSTFN("rawrigidbodyset_rbSetAngvel", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetAngvel(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetNextKinematicTranslation' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetNextKinematicTranslation", HOSTFN("rawrigidbodyset_rbSetNextKinematicTranslation", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetNextKinematicTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetNextKinematicRotation' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetNextKinematicRotation", HOSTFN("rawrigidbodyset_rbSetNextKinematicRotation", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetNextKinematicRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbRecomputeMassPropertiesFromColliders' */
  exports.setProperty(rt, "rawrigidbodyset_rbRecomputeMassPropertiesFromColliders", HOSTFN("rawrigidbodyset_rbRecomputeMassPropertiesFromColliders", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetAdditionalMass' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetAdditionalMass", HOSTFN("rawrigidbodyset_rbSetAdditionalMass", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetAdditionalMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetAdditionalMassProperties' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetAdditionalMassProperties", HOSTFN("rawrigidbodyset_rbSetAdditionalMassProperties", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetAdditionalMassProperties(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbLinvel' */
  exports.setProperty(rt, "rawrigidbodyset_rbLinvel", HOSTFN("rawrigidbodyset_rbLinvel", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbLinvel(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbAngvel' */
  exports.setProperty(rt, "rawrigidbodyset_rbAngvel", HOSTFN("rawrigidbodyset_rbAngvel", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbAngvel(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbLockTranslations' */
  exports.setProperty(rt, "rawrigidbodyset_rbLockTranslations", HOSTFN("rawrigidbodyset_rbLockTranslations", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbLockTranslations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetEnabledTranslations' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetEnabledTranslations", HOSTFN("rawrigidbodyset_rbSetEnabledTranslations", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetEnabledTranslations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbLockRotations' */
  exports.setProperty(rt, "rawrigidbodyset_rbLockRotations", HOSTFN("rawrigidbodyset_rbLockRotations", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbLockRotations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetEnabledRotations' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetEnabledRotations", HOSTFN("rawrigidbodyset_rbSetEnabledRotations", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetEnabledRotations(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbDominanceGroup' */
  exports.setProperty(rt, "rawrigidbodyset_rbDominanceGroup", HOSTFN("rawrigidbodyset_rbDominanceGroup", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbDominanceGroup(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetDominanceGroup' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetDominanceGroup", HOSTFN("rawrigidbodyset_rbSetDominanceGroup", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetDominanceGroup(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbEnableCcd' */
  exports.setProperty(rt, "rawrigidbodyset_rbEnableCcd", HOSTFN("rawrigidbodyset_rbEnableCcd", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbEnableCcd(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbMass' */
  exports.setProperty(rt, "rawrigidbodyset_rbMass", HOSTFN("rawrigidbodyset_rbMass", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbInvMass' */
  exports.setProperty(rt, "rawrigidbodyset_rbInvMass", HOSTFN("rawrigidbodyset_rbInvMass", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbInvMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbEffectiveInvMass' */
  exports.setProperty(rt, "rawrigidbodyset_rbEffectiveInvMass", HOSTFN("rawrigidbodyset_rbEffectiveInvMass", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbEffectiveInvMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbLocalCom' */
  exports.setProperty(rt, "rawrigidbodyset_rbLocalCom", HOSTFN("rawrigidbodyset_rbLocalCom", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbLocalCom(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbWorldCom' */
  exports.setProperty(rt, "rawrigidbodyset_rbWorldCom", HOSTFN("rawrigidbodyset_rbWorldCom", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbWorldCom(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbInvPrincipalInertiaSqrt' */
  exports.setProperty(rt, "rawrigidbodyset_rbInvPrincipalInertiaSqrt", HOSTFN("rawrigidbodyset_rbInvPrincipalInertiaSqrt", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbInvPrincipalInertiaSqrt(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbPrincipalInertiaLocalFrame' */
  exports.setProperty(rt, "rawrigidbodyset_rbPrincipalInertiaLocalFrame", HOSTFN("rawrigidbodyset_rbPrincipalInertiaLocalFrame", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbPrincipalInertiaLocalFrame(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbPrincipalInertia' */
  exports.setProperty(rt, "rawrigidbodyset_rbPrincipalInertia", HOSTFN("rawrigidbodyset_rbPrincipalInertia", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbPrincipalInertia(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt' */
  exports.setProperty(rt, "rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt", HOSTFN("rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbEffectiveAngularInertia' */
  exports.setProperty(rt, "rawrigidbodyset_rbEffectiveAngularInertia", HOSTFN("rawrigidbodyset_rbEffectiveAngularInertia", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbEffectiveAngularInertia(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbWakeUp' */
  exports.setProperty(rt, "rawrigidbodyset_rbWakeUp", HOSTFN("rawrigidbodyset_rbWakeUp", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbWakeUp(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbIsCcdEnabled' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsCcdEnabled", HOSTFN("rawrigidbodyset_rbIsCcdEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsCcdEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbNumColliders' */
  exports.setProperty(rt, "rawrigidbodyset_rbNumColliders", HOSTFN("rawrigidbodyset_rbNumColliders", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbNumColliders(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbCollider' */
  exports.setProperty(rt, "rawrigidbodyset_rbCollider", HOSTFN("rawrigidbodyset_rbCollider", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbCollider(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbBodyType' */
  exports.setProperty(rt, "rawrigidbodyset_rbBodyType", HOSTFN("rawrigidbodyset_rbBodyType", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbBodyType(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetBodyType' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetBodyType", HOSTFN("rawrigidbodyset_rbSetBodyType", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetBodyType(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbIsFixed' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsFixed", HOSTFN("rawrigidbodyset_rbIsFixed", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsFixed(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbIsKinematic' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsKinematic", HOSTFN("rawrigidbodyset_rbIsKinematic", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsKinematic(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbIsDynamic' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsDynamic", HOSTFN("rawrigidbodyset_rbIsDynamic", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsDynamic(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbLinearDamping' */
  exports.setProperty(rt, "rawrigidbodyset_rbLinearDamping", HOSTFN("rawrigidbodyset_rbLinearDamping", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbLinearDamping(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbAngularDamping' */
  exports.setProperty(rt, "rawrigidbodyset_rbAngularDamping", HOSTFN("rawrigidbodyset_rbAngularDamping", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbAngularDamping(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetLinearDamping' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetLinearDamping", HOSTFN("rawrigidbodyset_rbSetLinearDamping", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetLinearDamping(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetAngularDamping' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetAngularDamping", HOSTFN("rawrigidbodyset_rbSetAngularDamping", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetAngularDamping(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbSetEnabled' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetEnabled", HOSTFN("rawrigidbodyset_rbSetEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbIsEnabled' */
  exports.setProperty(rt, "rawrigidbodyset_rbIsEnabled", HOSTFN("rawrigidbodyset_rbIsEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbIsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbGravityScale' */
  exports.setProperty(rt, "rawrigidbodyset_rbGravityScale", HOSTFN("rawrigidbodyset_rbGravityScale", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbGravityScale(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetGravityScale' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetGravityScale", HOSTFN("rawrigidbodyset_rbSetGravityScale", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetGravityScale(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbResetForces' */
  exports.setProperty(rt, "rawrigidbodyset_rbResetForces", HOSTFN("rawrigidbodyset_rbResetForces", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbResetForces(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbResetTorques' */
  exports.setProperty(rt, "rawrigidbodyset_rbResetTorques", HOSTFN("rawrigidbodyset_rbResetTorques", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbResetTorques(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbAddForce' */
  exports.setProperty(rt, "rawrigidbodyset_rbAddForce", HOSTFN("rawrigidbodyset_rbAddForce", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbAddForce(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbApplyImpulse' */
  exports.setProperty(rt, "rawrigidbodyset_rbApplyImpulse", HOSTFN("rawrigidbodyset_rbApplyImpulse", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbApplyImpulse(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbAddTorque' */
  exports.setProperty(rt, "rawrigidbodyset_rbAddTorque", HOSTFN("rawrigidbodyset_rbAddTorque", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbAddTorque(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbApplyTorqueImpulse' */
  exports.setProperty(rt, "rawrigidbodyset_rbApplyTorqueImpulse", HOSTFN("rawrigidbodyset_rbApplyTorqueImpulse", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbApplyTorqueImpulse(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbAddForceAtPoint' */
  exports.setProperty(rt, "rawrigidbodyset_rbAddForceAtPoint", HOSTFN("rawrigidbodyset_rbAddForceAtPoint", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbAddForceAtPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbApplyImpulseAtPoint' */
  exports.setProperty(rt, "rawrigidbodyset_rbApplyImpulseAtPoint", HOSTFN("rawrigidbodyset_rbApplyImpulseAtPoint", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbApplyImpulseAtPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_rbUserData' */
  exports.setProperty(rt, "rawrigidbodyset_rbUserData", HOSTFN("rawrigidbodyset_rbUserData", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_rbUserData(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_rbSetUserData' */
  exports.setProperty(rt, "rawrigidbodyset_rbSetUserData", HOSTFN("rawrigidbodyset_rbSetUserData", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_rbSetUserData(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawrigidbodyset_free' */
  exports.setProperty(rt, "__wbg_rawrigidbodyset_free", HOSTFN("__wbg_rawrigidbodyset_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawrigidbodyset_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_new' */
  exports.setProperty(rt, "rawrigidbodyset_new", HOSTFN("rawrigidbodyset_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_createRigidBody' */
  exports.setProperty(rt, "rawrigidbodyset_createRigidBody", HOSTFN("rawrigidbodyset_createRigidBody", 25) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_createRigidBody(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]), getNumericVal(args[15]), getNumericVal(args[16]), getNumericVal(args[17]), getNumericVal(args[18]), getNumericVal(args[19]), getNumericVal(args[20]), getNumericVal(args[21]), getNumericVal(args[22]), getNumericVal(args[23]), getNumericVal(args[24]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_remove' */
  exports.setProperty(rt, "rawrigidbodyset_remove", HOSTFN("rawrigidbodyset_remove", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_remove(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_len' */
  exports.setProperty(rt, "rawrigidbodyset_len", HOSTFN("rawrigidbodyset_len", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_len(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_contains' */
  exports.setProperty(rt, "rawrigidbodyset_contains", HOSTFN("rawrigidbodyset_contains", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrigidbodyset_contains(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrigidbodyset_forEachRigidBodyHandle' */
  exports.setProperty(rt, "rawrigidbodyset_forEachRigidBodyHandle", HOSTFN("rawrigidbodyset_forEachRigidBodyHandle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_forEachRigidBodyHandle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrigidbodyset_propagateModifiedBodyPositionsToColliders' */
  exports.setProperty(rt, "rawrigidbodyset_propagateModifiedBodyPositionsToColliders", HOSTFN("rawrigidbodyset_propagateModifiedBodyPositionsToColliders", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrigidbodyset_propagateModifiedBodyPositionsToColliders(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawbroadphase_free' */
  exports.setProperty(rt, "__wbg_rawbroadphase_free", HOSTFN("__wbg_rawbroadphase_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawbroadphase_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawbroadphase_new' */
  exports.setProperty(rt, "rawbroadphase_new", HOSTFN("rawbroadphase_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawbroadphase_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coTranslation' */
  exports.setProperty(rt, "rawcolliderset_coTranslation", HOSTFN("rawcolliderset_coTranslation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coRotation' */
  exports.setProperty(rt, "rawcolliderset_coRotation", HOSTFN("rawcolliderset_coRotation", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSetTranslation' */
  exports.setProperty(rt, "rawcolliderset_coSetTranslation", HOSTFN("rawcolliderset_coSetTranslation", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetTranslation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetTranslationWrtParent' */
  exports.setProperty(rt, "rawcolliderset_coSetTranslationWrtParent", HOSTFN("rawcolliderset_coSetTranslationWrtParent", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetTranslationWrtParent(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetRotation' */
  exports.setProperty(rt, "rawcolliderset_coSetRotation", HOSTFN("rawcolliderset_coSetRotation", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRotation(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetRotationWrtParent' */
  exports.setProperty(rt, "rawcolliderset_coSetRotationWrtParent", HOSTFN("rawcolliderset_coSetRotationWrtParent", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRotationWrtParent(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coIsSensor' */
  exports.setProperty(rt, "rawcolliderset_coIsSensor", HOSTFN("rawcolliderset_coIsSensor", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coIsSensor(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coShapeType' */
  exports.setProperty(rt, "rawcolliderset_coShapeType", HOSTFN("rawcolliderset_coShapeType", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coShapeType(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coHalfspaceNormal' */
  exports.setProperty(rt, "rawcolliderset_coHalfspaceNormal", HOSTFN("rawcolliderset_coHalfspaceNormal", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coHalfspaceNormal(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coHalfExtents' */
  exports.setProperty(rt, "rawcolliderset_coHalfExtents", HOSTFN("rawcolliderset_coHalfExtents", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coHalfExtents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSetHalfExtents' */
  exports.setProperty(rt, "rawcolliderset_coSetHalfExtents", HOSTFN("rawcolliderset_coSetHalfExtents", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetHalfExtents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coRadius' */
  exports.setProperty(rt, "rawcolliderset_coRadius", HOSTFN("rawcolliderset_coRadius", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coRadius(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetRadius' */
  exports.setProperty(rt, "rawcolliderset_coSetRadius", HOSTFN("rawcolliderset_coSetRadius", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRadius(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coHalfHeight' */
  exports.setProperty(rt, "rawcolliderset_coHalfHeight", HOSTFN("rawcolliderset_coHalfHeight", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coHalfHeight(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetHalfHeight' */
  exports.setProperty(rt, "rawcolliderset_coSetHalfHeight", HOSTFN("rawcolliderset_coSetHalfHeight", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetHalfHeight(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coRoundRadius' */
  exports.setProperty(rt, "rawcolliderset_coRoundRadius", HOSTFN("rawcolliderset_coRoundRadius", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coRoundRadius(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetRoundRadius' */
  exports.setProperty(rt, "rawcolliderset_coSetRoundRadius", HOSTFN("rawcolliderset_coSetRoundRadius", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRoundRadius(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coVertices' */
  exports.setProperty(rt, "rawcolliderset_coVertices", HOSTFN("rawcolliderset_coVertices", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coVertices(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coIndices' */
  exports.setProperty(rt, "rawcolliderset_coIndices", HOSTFN("rawcolliderset_coIndices", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coIndices(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coHeightfieldHeights' */
  exports.setProperty(rt, "rawcolliderset_coHeightfieldHeights", HOSTFN("rawcolliderset_coHeightfieldHeights", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coHeightfieldHeights(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coHeightfieldScale' */
  exports.setProperty(rt, "rawcolliderset_coHeightfieldScale", HOSTFN("rawcolliderset_coHeightfieldScale", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coHeightfieldScale(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coHeightfieldNRows' */
  exports.setProperty(rt, "rawcolliderset_coHeightfieldNRows", HOSTFN("rawcolliderset_coHeightfieldNRows", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coHeightfieldNRows(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coHeightfieldNCols' */
  exports.setProperty(rt, "rawcolliderset_coHeightfieldNCols", HOSTFN("rawcolliderset_coHeightfieldNCols", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coHeightfieldNCols(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coParent' */
  exports.setProperty(rt, "rawcolliderset_coParent", HOSTFN("rawcolliderset_coParent", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coParent(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetEnabled' */
  exports.setProperty(rt, "rawcolliderset_coSetEnabled", HOSTFN("rawcolliderset_coSetEnabled", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coIsEnabled' */
  exports.setProperty(rt, "rawcolliderset_coIsEnabled", HOSTFN("rawcolliderset_coIsEnabled", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coIsEnabled(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coFriction' */
  exports.setProperty(rt, "rawcolliderset_coFriction", HOSTFN("rawcolliderset_coFriction", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coFriction(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coRestitution' */
  exports.setProperty(rt, "rawcolliderset_coRestitution", HOSTFN("rawcolliderset_coRestitution", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coRestitution(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coDensity' */
  exports.setProperty(rt, "rawcolliderset_coDensity", HOSTFN("rawcolliderset_coDensity", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coDensity(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coMass' */
  exports.setProperty(rt, "rawcolliderset_coMass", HOSTFN("rawcolliderset_coMass", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coVolume' */
  exports.setProperty(rt, "rawcolliderset_coVolume", HOSTFN("rawcolliderset_coVolume", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coVolume(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coCollisionGroups' */
  exports.setProperty(rt, "rawcolliderset_coCollisionGroups", HOSTFN("rawcolliderset_coCollisionGroups", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coCollisionGroups(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSolverGroups' */
  exports.setProperty(rt, "rawcolliderset_coSolverGroups", HOSTFN("rawcolliderset_coSolverGroups", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coSolverGroups(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coActiveHooks' */
  exports.setProperty(rt, "rawcolliderset_coActiveHooks", HOSTFN("rawcolliderset_coActiveHooks", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coActiveHooks(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coActiveCollisionTypes' */
  exports.setProperty(rt, "rawcolliderset_coActiveCollisionTypes", HOSTFN("rawcolliderset_coActiveCollisionTypes", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coActiveCollisionTypes(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coActiveEvents' */
  exports.setProperty(rt, "rawcolliderset_coActiveEvents", HOSTFN("rawcolliderset_coActiveEvents", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coActiveEvents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coContactForceEventThreshold' */
  exports.setProperty(rt, "rawcolliderset_coContactForceEventThreshold", HOSTFN("rawcolliderset_coContactForceEventThreshold", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coContactForceEventThreshold(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coContainsPoint' */
  exports.setProperty(rt, "rawcolliderset_coContainsPoint", HOSTFN("rawcolliderset_coContainsPoint", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coContainsPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coCastShape' */
  exports.setProperty(rt, "rawcolliderset_coCastShape", HOSTFN("rawcolliderset_coCastShape", 9) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coCastShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coCastCollider' */
  exports.setProperty(rt, "rawcolliderset_coCastCollider", HOSTFN("rawcolliderset_coCastCollider", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coCastCollider(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coIntersectsShape' */
  exports.setProperty(rt, "rawcolliderset_coIntersectsShape", HOSTFN("rawcolliderset_coIntersectsShape", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coIntersectsShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coContactShape' */
  exports.setProperty(rt, "rawcolliderset_coContactShape", HOSTFN("rawcolliderset_coContactShape", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coContactShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coContactCollider' */
  exports.setProperty(rt, "rawcolliderset_coContactCollider", HOSTFN("rawcolliderset_coContactCollider", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coContactCollider(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coProjectPoint' */
  exports.setProperty(rt, "rawcolliderset_coProjectPoint", HOSTFN("rawcolliderset_coProjectPoint", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coProjectPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coIntersectsRay' */
  exports.setProperty(rt, "rawcolliderset_coIntersectsRay", HOSTFN("rawcolliderset_coIntersectsRay", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coIntersectsRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coCastRay' */
  exports.setProperty(rt, "rawcolliderset_coCastRay", HOSTFN("rawcolliderset_coCastRay", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coCastRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coCastRayAndGetNormal' */
  exports.setProperty(rt, "rawcolliderset_coCastRayAndGetNormal", HOSTFN("rawcolliderset_coCastRayAndGetNormal", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coCastRayAndGetNormal(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSetSensor' */
  exports.setProperty(rt, "rawcolliderset_coSetSensor", HOSTFN("rawcolliderset_coSetSensor", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetSensor(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetRestitution' */
  exports.setProperty(rt, "rawcolliderset_coSetRestitution", HOSTFN("rawcolliderset_coSetRestitution", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRestitution(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetFriction' */
  exports.setProperty(rt, "rawcolliderset_coSetFriction", HOSTFN("rawcolliderset_coSetFriction", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetFriction(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coFrictionCombineRule' */
  exports.setProperty(rt, "rawcolliderset_coFrictionCombineRule", HOSTFN("rawcolliderset_coFrictionCombineRule", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coFrictionCombineRule(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSetFrictionCombineRule' */
  exports.setProperty(rt, "rawcolliderset_coSetFrictionCombineRule", HOSTFN("rawcolliderset_coSetFrictionCombineRule", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetFrictionCombineRule(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coRestitutionCombineRule' */
  exports.setProperty(rt, "rawcolliderset_coRestitutionCombineRule", HOSTFN("rawcolliderset_coRestitutionCombineRule", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_coRestitutionCombineRule(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_coSetRestitutionCombineRule' */
  exports.setProperty(rt, "rawcolliderset_coSetRestitutionCombineRule", HOSTFN("rawcolliderset_coSetRestitutionCombineRule", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetRestitutionCombineRule(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetCollisionGroups' */
  exports.setProperty(rt, "rawcolliderset_coSetCollisionGroups", HOSTFN("rawcolliderset_coSetCollisionGroups", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetCollisionGroups(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetSolverGroups' */
  exports.setProperty(rt, "rawcolliderset_coSetSolverGroups", HOSTFN("rawcolliderset_coSetSolverGroups", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetSolverGroups(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetActiveHooks' */
  exports.setProperty(rt, "rawcolliderset_coSetActiveHooks", HOSTFN("rawcolliderset_coSetActiveHooks", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetActiveHooks(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetActiveEvents' */
  exports.setProperty(rt, "rawcolliderset_coSetActiveEvents", HOSTFN("rawcolliderset_coSetActiveEvents", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetActiveEvents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetActiveCollisionTypes' */
  exports.setProperty(rt, "rawcolliderset_coSetActiveCollisionTypes", HOSTFN("rawcolliderset_coSetActiveCollisionTypes", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetActiveCollisionTypes(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetShape' */
  exports.setProperty(rt, "rawcolliderset_coSetShape", HOSTFN("rawcolliderset_coSetShape", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetContactForceEventThreshold' */
  exports.setProperty(rt, "rawcolliderset_coSetContactForceEventThreshold", HOSTFN("rawcolliderset_coSetContactForceEventThreshold", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetContactForceEventThreshold(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetDensity' */
  exports.setProperty(rt, "rawcolliderset_coSetDensity", HOSTFN("rawcolliderset_coSetDensity", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetDensity(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetMass' */
  exports.setProperty(rt, "rawcolliderset_coSetMass", HOSTFN("rawcolliderset_coSetMass", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetMass(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_coSetMassProperties' */
  exports.setProperty(rt, "rawcolliderset_coSetMassProperties", HOSTFN("rawcolliderset_coSetMassProperties", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_coSetMassProperties(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawcolliderset_free' */
  exports.setProperty(rt, "__wbg_rawcolliderset_free", HOSTFN("__wbg_rawcolliderset_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawcolliderset_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_new' */
  exports.setProperty(rt, "rawcolliderset_new", HOSTFN("rawcolliderset_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_len' */
  exports.setProperty(rt, "rawcolliderset_len", HOSTFN("rawcolliderset_len", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_len(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_contains' */
  exports.setProperty(rt, "rawcolliderset_contains", HOSTFN("rawcolliderset_contains", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_contains(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_createCollider' */
  exports.setProperty(rt, "rawcolliderset_createCollider", HOSTFN("rawcolliderset_createCollider", 26) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_createCollider(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]), getNumericVal(args[15]), getNumericVal(args[16]), getNumericVal(args[17]), getNumericVal(args[18]), getNumericVal(args[19]), getNumericVal(args[20]), getNumericVal(args[21]), getNumericVal(args[22]), getNumericVal(args[23]), getNumericVal(args[24]), getNumericVal(args[25]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_remove' */
  exports.setProperty(rt, "rawcolliderset_remove", HOSTFN("rawcolliderset_remove", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_remove(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcolliderset_forEachColliderHandle' */
  exports.setProperty(rt, "rawcolliderset_forEachColliderHandle", HOSTFN("rawcolliderset_forEachColliderHandle", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawcolliderset_forEachColliderHandle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawshapecontact_free' */
  exports.setProperty(rt, "__wbg_rawshapecontact_free", HOSTFN("__wbg_rawshapecontact_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawshapecontact_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawshapecontact_distance' */
  exports.setProperty(rt, "rawshapecontact_distance", HOSTFN("rawshapecontact_distance", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecontact_distance(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawnarrowphase_free' */
  exports.setProperty(rt, "__wbg_rawnarrowphase_free", HOSTFN("__wbg_rawnarrowphase_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawnarrowphase_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawnarrowphase_new' */
  exports.setProperty(rt, "rawnarrowphase_new", HOSTFN("rawnarrowphase_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawnarrowphase_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawnarrowphase_contacts_with' */
  exports.setProperty(rt, "rawnarrowphase_contacts_with", HOSTFN("rawnarrowphase_contacts_with", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawnarrowphase_contacts_with(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawnarrowphase_contact_pair' */
  exports.setProperty(rt, "rawnarrowphase_contact_pair", HOSTFN("rawnarrowphase_contact_pair", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawnarrowphase_contact_pair(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawnarrowphase_intersections_with' */
  exports.setProperty(rt, "rawnarrowphase_intersections_with", HOSTFN("rawnarrowphase_intersections_with", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawnarrowphase_intersections_with(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawnarrowphase_intersection_pair' */
  exports.setProperty(rt, "rawnarrowphase_intersection_pair", HOSTFN("rawnarrowphase_intersection_pair", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawnarrowphase_intersection_pair(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawcontactmanifold_free' */
  exports.setProperty(rt, "__wbg_rawcontactmanifold_free", HOSTFN("__wbg_rawcontactmanifold_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawcontactmanifold_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcontactpair_collider1' */
  exports.setProperty(rt, "rawcontactpair_collider1", HOSTFN("rawcontactpair_collider1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactpair_collider1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactpair_collider2' */
  exports.setProperty(rt, "rawcontactpair_collider2", HOSTFN("rawcontactpair_collider2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactpair_collider2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactpair_numContactManifolds' */
  exports.setProperty(rt, "rawcontactpair_numContactManifolds", HOSTFN("rawcontactpair_numContactManifolds", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactpair_numContactManifolds(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactpair_contactManifold' */
  exports.setProperty(rt, "rawcontactpair_contactManifold", HOSTFN("rawcontactpair_contactManifold", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactpair_contactManifold(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_normal' */
  exports.setProperty(rt, "rawcontactmanifold_normal", HOSTFN("rawcontactmanifold_normal", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_normal(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_local_n1' */
  exports.setProperty(rt, "rawcontactmanifold_local_n1", HOSTFN("rawcontactmanifold_local_n1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_local_n1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_local_n2' */
  exports.setProperty(rt, "rawcontactmanifold_local_n2", HOSTFN("rawcontactmanifold_local_n2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_local_n2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_subshape1' */
  exports.setProperty(rt, "rawcontactmanifold_subshape1", HOSTFN("rawcontactmanifold_subshape1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_subshape1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_subshape2' */
  exports.setProperty(rt, "rawcontactmanifold_subshape2", HOSTFN("rawcontactmanifold_subshape2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_subshape2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_num_contacts' */
  exports.setProperty(rt, "rawcontactmanifold_num_contacts", HOSTFN("rawcontactmanifold_num_contacts", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_num_contacts(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_local_p1' */
  exports.setProperty(rt, "rawcontactmanifold_contact_local_p1", HOSTFN("rawcontactmanifold_contact_local_p1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_local_p1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_local_p2' */
  exports.setProperty(rt, "rawcontactmanifold_contact_local_p2", HOSTFN("rawcontactmanifold_contact_local_p2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_local_p2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_dist' */
  exports.setProperty(rt, "rawcontactmanifold_contact_dist", HOSTFN("rawcontactmanifold_contact_dist", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_dist(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_fid1' */
  exports.setProperty(rt, "rawcontactmanifold_contact_fid1", HOSTFN("rawcontactmanifold_contact_fid1", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_fid1(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_fid2' */
  exports.setProperty(rt, "rawcontactmanifold_contact_fid2", HOSTFN("rawcontactmanifold_contact_fid2", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_fid2(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_impulse' */
  exports.setProperty(rt, "rawcontactmanifold_contact_impulse", HOSTFN("rawcontactmanifold_contact_impulse", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_impulse(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_tangent_impulse_x' */
  exports.setProperty(rt, "rawcontactmanifold_contact_tangent_impulse_x", HOSTFN("rawcontactmanifold_contact_tangent_impulse_x", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_tangent_impulse_x(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_contact_tangent_impulse_y' */
  exports.setProperty(rt, "rawcontactmanifold_contact_tangent_impulse_y", HOSTFN("rawcontactmanifold_contact_tangent_impulse_y", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_contact_tangent_impulse_y(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_num_solver_contacts' */
  exports.setProperty(rt, "rawcontactmanifold_num_solver_contacts", HOSTFN("rawcontactmanifold_num_solver_contacts", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_num_solver_contacts(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_solver_contact_point' */
  exports.setProperty(rt, "rawcontactmanifold_solver_contact_point", HOSTFN("rawcontactmanifold_solver_contact_point", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_solver_contact_point(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_solver_contact_dist' */
  exports.setProperty(rt, "rawcontactmanifold_solver_contact_dist", HOSTFN("rawcontactmanifold_solver_contact_dist", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_solver_contact_dist(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_solver_contact_friction' */
  exports.setProperty(rt, "rawcontactmanifold_solver_contact_friction", HOSTFN("rawcontactmanifold_solver_contact_friction", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_solver_contact_friction(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_solver_contact_restitution' */
  exports.setProperty(rt, "rawcontactmanifold_solver_contact_restitution", HOSTFN("rawcontactmanifold_solver_contact_restitution", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_solver_contact_restitution(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactmanifold_solver_contact_tangent_velocity' */
  exports.setProperty(rt, "rawcontactmanifold_solver_contact_tangent_velocity", HOSTFN("rawcontactmanifold_solver_contact_tangent_velocity", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactmanifold_solver_contact_tangent_velocity(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawpointprojection_free' */
  exports.setProperty(rt, "__wbg_rawpointprojection_free", HOSTFN("__wbg_rawpointprojection_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawpointprojection_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawpointcolliderprojection_free' */
  exports.setProperty(rt, "__wbg_rawpointcolliderprojection_free", HOSTFN("__wbg_rawpointcolliderprojection_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawpointcolliderprojection_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawpointcolliderprojection_colliderHandle' */
  exports.setProperty(rt, "rawpointcolliderprojection_colliderHandle", HOSTFN("rawpointcolliderprojection_colliderHandle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointcolliderprojection_colliderHandle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawpointcolliderprojection_featureType' */
  exports.setProperty(rt, "rawpointcolliderprojection_featureType", HOSTFN("rawpointcolliderprojection_featureType", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointcolliderprojection_featureType(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawpointcolliderprojection_featureId' */
  exports.setProperty(rt, "rawpointcolliderprojection_featureId", HOSTFN("rawpointcolliderprojection_featureId", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawpointcolliderprojection_featureId(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawrayintersection_free' */
  exports.setProperty(rt, "__wbg_rawrayintersection_free", HOSTFN("__wbg_rawrayintersection_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawrayintersection_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawrayintersection_featureType' */
  exports.setProperty(rt, "rawrayintersection_featureType", HOSTFN("rawrayintersection_featureType", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrayintersection_featureType(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrayintersection_featureId' */
  exports.setProperty(rt, "rawrayintersection_featureId", HOSTFN("rawrayintersection_featureId", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawrayintersection_featureId(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawraycolliderintersection_normal' */
  exports.setProperty(rt, "rawraycolliderintersection_normal", HOSTFN("rawraycolliderintersection_normal", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycolliderintersection_normal(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycolliderintersection_toi' */
  exports.setProperty(rt, "rawraycolliderintersection_toi", HOSTFN("rawraycolliderintersection_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycolliderintersection_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycolliderintersection_featureType' */
  exports.setProperty(rt, "rawraycolliderintersection_featureType", HOSTFN("rawraycolliderintersection_featureType", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycolliderintersection_featureType(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycolliderintersection_featureId' */
  exports.setProperty(rt, "rawraycolliderintersection_featureId", HOSTFN("rawraycolliderintersection_featureId", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawraycolliderintersection_featureId(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawraycollidertoi_free' */
  exports.setProperty(rt, "__wbg_rawraycollidertoi_free", HOSTFN("__wbg_rawraycollidertoi_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawraycollidertoi_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawshape_free' */
  exports.setProperty(rt, "__wbg_rawshape_free", HOSTFN("__wbg_rawshape_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawshape_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawshape_cuboid' */
  exports.setProperty(rt, "rawshape_cuboid", HOSTFN("rawshape_cuboid", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_cuboid(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundCuboid' */
  exports.setProperty(rt, "rawshape_roundCuboid", HOSTFN("rawshape_roundCuboid", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundCuboid(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_ball' */
  exports.setProperty(rt, "rawshape_ball", HOSTFN("rawshape_ball", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_ball(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_halfspace' */
  exports.setProperty(rt, "rawshape_halfspace", HOSTFN("rawshape_halfspace", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_halfspace(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_capsule' */
  exports.setProperty(rt, "rawshape_capsule", HOSTFN("rawshape_capsule", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_capsule(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_cylinder' */
  exports.setProperty(rt, "rawshape_cylinder", HOSTFN("rawshape_cylinder", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_cylinder(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundCylinder' */
  exports.setProperty(rt, "rawshape_roundCylinder", HOSTFN("rawshape_roundCylinder", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundCylinder(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_cone' */
  exports.setProperty(rt, "rawshape_cone", HOSTFN("rawshape_cone", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_cone(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundCone' */
  exports.setProperty(rt, "rawshape_roundCone", HOSTFN("rawshape_roundCone", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundCone(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_polyline' */
  exports.setProperty(rt, "rawshape_polyline", HOSTFN("rawshape_polyline", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_polyline(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_trimesh' */
  exports.setProperty(rt, "rawshape_trimesh", HOSTFN("rawshape_trimesh", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_trimesh(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_heightfield' */
  exports.setProperty(rt, "rawshape_heightfield", HOSTFN("rawshape_heightfield", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_heightfield(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_segment' */
  exports.setProperty(rt, "rawshape_segment", HOSTFN("rawshape_segment", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_segment(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_triangle' */
  exports.setProperty(rt, "rawshape_triangle", HOSTFN("rawshape_triangle", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_triangle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundTriangle' */
  exports.setProperty(rt, "rawshape_roundTriangle", HOSTFN("rawshape_roundTriangle", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundTriangle(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_convexHull' */
  exports.setProperty(rt, "rawshape_convexHull", HOSTFN("rawshape_convexHull", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_convexHull(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundConvexHull' */
  exports.setProperty(rt, "rawshape_roundConvexHull", HOSTFN("rawshape_roundConvexHull", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundConvexHull(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_convexMesh' */
  exports.setProperty(rt, "rawshape_convexMesh", HOSTFN("rawshape_convexMesh", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_convexMesh(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_roundConvexMesh' */
  exports.setProperty(rt, "rawshape_roundConvexMesh", HOSTFN("rawshape_roundConvexMesh", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_roundConvexMesh(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_castShape' */
  exports.setProperty(rt, "rawshape_castShape", HOSTFN("rawshape_castShape", 10) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_castShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_intersectsShape' */
  exports.setProperty(rt, "rawshape_intersectsShape", HOSTFN("rawshape_intersectsShape", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_intersectsShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_contactShape' */
  exports.setProperty(rt, "rawshape_contactShape", HOSTFN("rawshape_contactShape", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_contactShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_containsPoint' */
  exports.setProperty(rt, "rawshape_containsPoint", HOSTFN("rawshape_containsPoint", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_containsPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_projectPoint' */
  exports.setProperty(rt, "rawshape_projectPoint", HOSTFN("rawshape_projectPoint", 5) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_projectPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_intersectsRay' */
  exports.setProperty(rt, "rawshape_intersectsRay", HOSTFN("rawshape_intersectsRay", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_intersectsRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_castRay' */
  exports.setProperty(rt, "rawshape_castRay", HOSTFN("rawshape_castRay", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_castRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshape_castRayAndGetNormal' */
  exports.setProperty(rt, "rawshape_castRayAndGetNormal", HOSTFN("rawshape_castRayAndGetNormal", 7) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshape_castRayAndGetNormal(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawshapetoi_free' */
  exports.setProperty(rt, "__wbg_rawshapetoi_free", HOSTFN("__wbg_rawshapetoi_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawshapetoi_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawshapetoi_witness1' */
  exports.setProperty(rt, "rawshapetoi_witness1", HOSTFN("rawshapetoi_witness1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapetoi_witness1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapetoi_normal1' */
  exports.setProperty(rt, "rawshapetoi_normal1", HOSTFN("rawshapetoi_normal1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapetoi_normal1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapetoi_normal2' */
  exports.setProperty(rt, "rawshapetoi_normal2", HOSTFN("rawshapetoi_normal2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapetoi_normal2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawshapecollidertoi_free' */
  exports.setProperty(rt, "__wbg_rawshapecollidertoi_free", HOSTFN("__wbg_rawshapecollidertoi_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawshapecollidertoi_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawshapecollidertoi_witness2' */
  exports.setProperty(rt, "rawshapecollidertoi_witness2", HOSTFN("rawshapecollidertoi_witness2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_witness2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecollidertoi_normal2' */
  exports.setProperty(rt, "rawshapecollidertoi_normal2", HOSTFN("rawshapecollidertoi_normal2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_normal2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_new' */
  exports.setProperty(rt, "rawrotation_new", HOSTFN("rawrotation_new", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_new(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_identity' */
  exports.setProperty(rt, "rawrotation_identity", HOSTFN("rawrotation_identity", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_identity(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_y' */
  exports.setProperty(rt, "rawrotation_y", HOSTFN("rawrotation_y", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_y(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_w' */
  exports.setProperty(rt, "rawrotation_w", HOSTFN("rawrotation_w", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_w(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_zero' */
  exports.setProperty(rt, "rawvector_zero", HOSTFN("rawvector_zero", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_zero(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_new' */
  exports.setProperty(rt, "rawvector_new", HOSTFN("rawvector_new", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_new(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_set_y' */
  exports.setProperty(rt, "rawvector_set_y", HOSTFN("rawvector_set_y", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawvector_set_y(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawvector_xyz' */
  exports.setProperty(rt, "rawvector_xyz", HOSTFN("rawvector_xyz", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_xyz(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_yxz' */
  exports.setProperty(rt, "rawvector_yxz", HOSTFN("rawvector_yxz", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_yxz(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_zxy' */
  exports.setProperty(rt, "rawvector_zxy", HOSTFN("rawvector_zxy", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_zxy(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_xzy' */
  exports.setProperty(rt, "rawvector_xzy", HOSTFN("rawvector_xzy", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_xzy(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_yzx' */
  exports.setProperty(rt, "rawvector_yzx", HOSTFN("rawvector_yzx", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_yzx(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_zyx' */
  exports.setProperty(rt, "rawvector_zyx", HOSTFN("rawvector_zyx", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_zyx(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawsdpmatrix3_elements' */
  exports.setProperty(rt, "rawsdpmatrix3_elements", HOSTFN("rawsdpmatrix3_elements", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawsdpmatrix3_elements(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawdebugrenderpipeline_free' */
  exports.setProperty(rt, "__wbg_rawdebugrenderpipeline_free", HOSTFN("__wbg_rawdebugrenderpipeline_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawdebugrenderpipeline_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawdebugrenderpipeline_new' */
  exports.setProperty(rt, "rawdebugrenderpipeline_new", HOSTFN("rawdebugrenderpipeline_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdebugrenderpipeline_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdebugrenderpipeline_vertices' */
  exports.setProperty(rt, "rawdebugrenderpipeline_vertices", HOSTFN("rawdebugrenderpipeline_vertices", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdebugrenderpipeline_vertices(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdebugrenderpipeline_colors' */
  exports.setProperty(rt, "rawdebugrenderpipeline_colors", HOSTFN("rawdebugrenderpipeline_colors", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdebugrenderpipeline_colors(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdebugrenderpipeline_render' */
  exports.setProperty(rt, "rawdebugrenderpipeline_render", HOSTFN("rawdebugrenderpipeline_render", 6) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawdebugrenderpipeline_render(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_raweventqueue_free' */
  exports.setProperty(rt, "__wbg_raweventqueue_free", HOSTFN("__wbg_raweventqueue_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_raweventqueue_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawcontactforceevent_free' */
  exports.setProperty(rt, "__wbg_rawcontactforceevent_free", HOSTFN("__wbg_rawcontactforceevent_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawcontactforceevent_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawcontactforceevent_collider2' */
  exports.setProperty(rt, "rawcontactforceevent_collider2", HOSTFN("rawcontactforceevent_collider2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_collider2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactforceevent_total_force' */
  exports.setProperty(rt, "rawcontactforceevent_total_force", HOSTFN("rawcontactforceevent_total_force", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_total_force(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactforceevent_total_force_magnitude' */
  exports.setProperty(rt, "rawcontactforceevent_total_force_magnitude", HOSTFN("rawcontactforceevent_total_force_magnitude", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_total_force_magnitude(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactforceevent_max_force_direction' */
  exports.setProperty(rt, "rawcontactforceevent_max_force_direction", HOSTFN("rawcontactforceevent_max_force_direction", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_max_force_direction(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactforceevent_max_force_magnitude' */
  exports.setProperty(rt, "rawcontactforceevent_max_force_magnitude", HOSTFN("rawcontactforceevent_max_force_magnitude", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_max_force_magnitude(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'raweventqueue_new' */
  exports.setProperty(rt, "raweventqueue_new", HOSTFN("raweventqueue_new", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_raweventqueue_new(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'raweventqueue_drainCollisionEvents' */
  exports.setProperty(rt, "raweventqueue_drainCollisionEvents", HOSTFN("raweventqueue_drainCollisionEvents", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_raweventqueue_drainCollisionEvents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'raweventqueue_drainContactForceEvents' */
  exports.setProperty(rt, "raweventqueue_drainContactForceEvents", HOSTFN("raweventqueue_drainContactForceEvents", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_raweventqueue_drainContactForceEvents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'raweventqueue_clear' */
  exports.setProperty(rt, "raweventqueue_clear", HOSTFN("raweventqueue_clear", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_raweventqueue_clear(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawphysicspipeline_free' */
  exports.setProperty(rt, "__wbg_rawphysicspipeline_free", HOSTFN("__wbg_rawphysicspipeline_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawphysicspipeline_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawphysicspipeline_new' */
  exports.setProperty(rt, "rawphysicspipeline_new", HOSTFN("rawphysicspipeline_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawphysicspipeline_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawphysicspipeline_step' */
  exports.setProperty(rt, "rawphysicspipeline_step", HOSTFN("rawphysicspipeline_step", 11) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawphysicspipeline_step(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawphysicspipeline_stepWithEvents' */
  exports.setProperty(rt, "rawphysicspipeline_stepWithEvents", HOSTFN("rawphysicspipeline_stepWithEvents", 15) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawphysicspipeline_stepWithEvents(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawquerypipeline_free' */
  exports.setProperty(rt, "__wbg_rawquerypipeline_free", HOSTFN("__wbg_rawquerypipeline_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawquerypipeline_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_new' */
  exports.setProperty(rt, "rawquerypipeline_new", HOSTFN("rawquerypipeline_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_update' */
  exports.setProperty(rt, "rawquerypipeline_update", HOSTFN("rawquerypipeline_update", 3) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_update(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_castRay' */
  exports.setProperty(rt, "rawquerypipeline_castRay", HOSTFN("rawquerypipeline_castRay", 15) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_castRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_castRayAndGetNormal' */
  exports.setProperty(rt, "rawquerypipeline_castRayAndGetNormal", HOSTFN("rawquerypipeline_castRayAndGetNormal", 15) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_castRayAndGetNormal(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_intersectionsWithRay' */
  exports.setProperty(rt, "rawquerypipeline_intersectionsWithRay", HOSTFN("rawquerypipeline_intersectionsWithRay", 16) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_intersectionsWithRay(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]), getNumericVal(args[15]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_intersectionWithShape' */
  exports.setProperty(rt, "rawquerypipeline_intersectionWithShape", HOSTFN("rawquerypipeline_intersectionWithShape", 15) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_intersectionWithShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_projectPoint' */
  exports.setProperty(rt, "rawquerypipeline_projectPoint", HOSTFN("rawquerypipeline_projectPoint", 13) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_projectPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_projectPointAndGetFeature' */
  exports.setProperty(rt, "rawquerypipeline_projectPointAndGetFeature", HOSTFN("rawquerypipeline_projectPointAndGetFeature", 12) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_projectPointAndGetFeature(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_intersectionsWithPoint' */
  exports.setProperty(rt, "rawquerypipeline_intersectionsWithPoint", HOSTFN("rawquerypipeline_intersectionsWithPoint", 13) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_intersectionsWithPoint(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_castShape' */
  exports.setProperty(rt, "rawquerypipeline_castShape", HOSTFN("rawquerypipeline_castShape", 17) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawquerypipeline_castShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]), getNumericVal(args[15]), getNumericVal(args[16]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawquerypipeline_intersectionsWithShape' */
  exports.setProperty(rt, "rawquerypipeline_intersectionsWithShape", HOSTFN("rawquerypipeline_intersectionsWithShape", 15) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_intersectionsWithShape(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]), getNumericVal(args[10]), getNumericVal(args[11]), getNumericVal(args[12]), getNumericVal(args[13]), getNumericVal(args[14]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawquerypipeline_collidersWithAabbIntersectingAabb' */
  exports.setProperty(rt, "rawquerypipeline_collidersWithAabbIntersectingAabb", HOSTFN("rawquerypipeline_collidersWithAabbIntersectingAabb", 4) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawquerypipeline_collidersWithAabbIntersectingAabb(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawdeserializedworld_free' */
  exports.setProperty(rt, "__wbg_rawdeserializedworld_free", HOSTFN("__wbg_rawdeserializedworld_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawdeserializedworld_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawdeserializedworld_takeGravity' */
  exports.setProperty(rt, "rawdeserializedworld_takeGravity", HOSTFN("rawdeserializedworld_takeGravity", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeGravity(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeIntegrationParameters' */
  exports.setProperty(rt, "rawdeserializedworld_takeIntegrationParameters", HOSTFN("rawdeserializedworld_takeIntegrationParameters", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeIntegrationParameters(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeIslandManager' */
  exports.setProperty(rt, "rawdeserializedworld_takeIslandManager", HOSTFN("rawdeserializedworld_takeIslandManager", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeIslandManager(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeBroadPhase' */
  exports.setProperty(rt, "rawdeserializedworld_takeBroadPhase", HOSTFN("rawdeserializedworld_takeBroadPhase", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeBroadPhase(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeNarrowPhase' */
  exports.setProperty(rt, "rawdeserializedworld_takeNarrowPhase", HOSTFN("rawdeserializedworld_takeNarrowPhase", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeNarrowPhase(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeBodies' */
  exports.setProperty(rt, "rawdeserializedworld_takeBodies", HOSTFN("rawdeserializedworld_takeBodies", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeBodies(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeColliders' */
  exports.setProperty(rt, "rawdeserializedworld_takeColliders", HOSTFN("rawdeserializedworld_takeColliders", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeColliders(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeImpulseJoints' */
  exports.setProperty(rt, "rawdeserializedworld_takeImpulseJoints", HOSTFN("rawdeserializedworld_takeImpulseJoints", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeImpulseJoints(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawdeserializedworld_takeMultibodyJoints' */
  exports.setProperty(rt, "rawdeserializedworld_takeMultibodyJoints", HOSTFN("rawdeserializedworld_takeMultibodyJoints", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawdeserializedworld_takeMultibodyJoints(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawserializationpipeline_serializeAll' */
  exports.setProperty(rt, "rawserializationpipeline_serializeAll", HOSTFN("rawserializationpipeline_serializeAll", 10) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawserializationpipeline_serializeAll(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]), getNumericVal(args[2]), getNumericVal(args[3]), getNumericVal(args[4]), getNumericVal(args[5]), getNumericVal(args[6]), getNumericVal(args[7]), getNumericVal(args[8]), getNumericVal(args[9]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawserializationpipeline_deserializeAll' */
  exports.setProperty(rt, "rawserializationpipeline_deserializeAll", HOSTFN("rawserializationpipeline_deserializeAll", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawserializationpipeline_deserializeAll(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawcontactpair_free' */
  exports.setProperty(rt, "__wbg_rawcontactpair_free", HOSTFN("__wbg_rawcontactpair_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawcontactpair_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawraycolliderintersection_free' */
  exports.setProperty(rt, "__wbg_rawraycolliderintersection_free", HOSTFN("__wbg_rawraycolliderintersection_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawraycolliderintersection_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawrotation_free' */
  exports.setProperty(rt, "__wbg_rawrotation_free", HOSTFN("__wbg_rawrotation_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawrotation_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawvector_free' */
  exports.setProperty(rt, "__wbg_rawvector_free", HOSTFN("__wbg_rawvector_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawvector_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbg_rawsdpmatrix3_free' */
  exports.setProperty(rt, "__wbg_rawsdpmatrix3_free", HOSTFN("__wbg_rawsdpmatrix3_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawsdpmatrix3_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawvector_set_x' */
  exports.setProperty(rt, "rawvector_set_x", HOSTFN("rawvector_set_x", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawvector_set_x(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawvector_set_z' */
  exports.setProperty(rt, "rawvector_set_z", HOSTFN("rawvector_set_z", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_rawvector_set_z(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: 'rawpointprojection_isInside' */
  exports.setProperty(rt, "rawpointprojection_isInside", HOSTFN("rawpointprojection_isInside", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointprojection_isInside(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawpointcolliderprojection_isInside' */
  exports.setProperty(rt, "rawpointcolliderprojection_isInside", HOSTFN("rawpointcolliderprojection_isInside", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointcolliderprojection_isInside(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcolliderset_isHandleValid' */
  exports.setProperty(rt, "rawcolliderset_isHandleValid", HOSTFN("rawcolliderset_isHandleValid", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcolliderset_isHandleValid(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecontact_point1' */
  exports.setProperty(rt, "rawshapecontact_point1", HOSTFN("rawshapecontact_point1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecontact_point1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecontact_point2' */
  exports.setProperty(rt, "rawshapecontact_point2", HOSTFN("rawshapecontact_point2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecontact_point2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecontact_normal2' */
  exports.setProperty(rt, "rawshapecontact_normal2", HOSTFN("rawshapecontact_normal2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecontact_normal2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawpointprojection_point' */
  exports.setProperty(rt, "rawpointprojection_point", HOSTFN("rawpointprojection_point", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointprojection_point(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawpointcolliderprojection_point' */
  exports.setProperty(rt, "rawpointcolliderprojection_point", HOSTFN("rawpointcolliderprojection_point", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawpointcolliderprojection_point(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrayintersection_normal' */
  exports.setProperty(rt, "rawrayintersection_normal", HOSTFN("rawrayintersection_normal", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrayintersection_normal(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecollidertoi_witness1' */
  exports.setProperty(rt, "rawshapecollidertoi_witness1", HOSTFN("rawshapecollidertoi_witness1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_witness1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecontact_normal1' */
  exports.setProperty(rt, "rawshapecontact_normal1", HOSTFN("rawshapecontact_normal1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecontact_normal1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecollidertoi_normal1' */
  exports.setProperty(rt, "rawshapecollidertoi_normal1", HOSTFN("rawshapecollidertoi_normal1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_normal1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapetoi_witness2' */
  exports.setProperty(rt, "rawshapetoi_witness2", HOSTFN("rawshapetoi_witness2", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapetoi_witness2(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawserializationpipeline_new' */
  exports.setProperty(rt, "rawserializationpipeline_new", HOSTFN("rawserializationpipeline_new", 0) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawserializationpipeline_new(&nativeState->rootCtx);
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawintegrationparameters_erp' */
  exports.setProperty(rt, "rawintegrationparameters_erp", HOSTFN("rawintegrationparameters_erp", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawintegrationparameters_erp(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrayintersection_toi' */
  exports.setProperty(rt, "rawrayintersection_toi", HOSTFN("rawrayintersection_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrayintersection_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycollidertoi_toi' */
  exports.setProperty(rt, "rawraycollidertoi_toi", HOSTFN("rawraycollidertoi_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycollidertoi_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapetoi_toi' */
  exports.setProperty(rt, "rawshapetoi_toi", HOSTFN("rawshapetoi_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapetoi_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecollidertoi_toi' */
  exports.setProperty(rt, "rawshapecollidertoi_toi", HOSTFN("rawshapecollidertoi_toi", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_toi(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_x' */
  exports.setProperty(rt, "rawrotation_x", HOSTFN("rawrotation_x", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_x(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawrotation_z' */
  exports.setProperty(rt, "rawrotation_z", HOSTFN("rawrotation_z", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawrotation_z(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_x' */
  exports.setProperty(rt, "rawvector_x", HOSTFN("rawvector_x", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_x(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_y' */
  exports.setProperty(rt, "rawvector_y", HOSTFN("rawvector_y", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_y(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawvector_z' */
  exports.setProperty(rt, "rawvector_z", HOSTFN("rawvector_z", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawvector_z(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycolliderintersection_colliderHandle' */
  exports.setProperty(rt, "rawraycolliderintersection_colliderHandle", HOSTFN("rawraycolliderintersection_colliderHandle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycolliderintersection_colliderHandle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawraycollidertoi_colliderHandle' */
  exports.setProperty(rt, "rawraycollidertoi_colliderHandle", HOSTFN("rawraycollidertoi_colliderHandle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawraycollidertoi_colliderHandle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawshapecollidertoi_colliderHandle' */
  exports.setProperty(rt, "rawshapecollidertoi_colliderHandle", HOSTFN("rawshapecollidertoi_colliderHandle", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawshapecollidertoi_colliderHandle(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: 'rawcontactforceevent_collider1' */
  exports.setProperty(rt, "rawcontactforceevent_collider1", HOSTFN("rawcontactforceevent_collider1", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_rawcontactforceevent_collider1(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbg_rawserializationpipeline_free' */
  exports.setProperty(rt, "__wbg_rawserializationpipeline_free", HOSTFN("__wbg_rawserializationpipeline_free", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbg_rawserializationpipeline_free(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbindgen_add_to_stack_pointer' */
  exports.setProperty(rt, "__wbindgen_add_to_stack_pointer", HOSTFN("__wbindgen_add_to_stack_pointer", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_0x5F_wbindgen_add_to_stack_pointer(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbindgen_free' */
  exports.setProperty(rt, "__wbindgen_free", HOSTFN("__wbindgen_free", 2) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbindgen_free(&nativeState->rootCtx, getNumericVal(args[0]), getNumericVal(args[1]));
    return jsi::Value::undefined();
  }));

    
  /* export: '__wbindgen_malloc' */
  exports.setProperty(rt, "__wbindgen_malloc", HOSTFN("__wbindgen_malloc", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    auto res = w2c_rapier__wasm3d__bg_0x5F_wbindgen_malloc(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value { (double)res };;
  }));

    
  /* export: '__wbindgen_exn_store' */
  exports.setProperty(rt, "__wbindgen_exn_store", HOSTFN("__wbindgen_exn_store", 1) {
    auto nativeState = getRapier__wasm3d__bgModuleContextContext(rt, thisValue);
    assert(nativeState != nullptr);
    w2c_rapier__wasm3d__bg_0x5F_wbindgen_exn_store(&nativeState->rootCtx, getNumericVal(args[0]));
    return jsi::Value::undefined();
  }));

    exports.setNativeState(rt, inst);
    mod.setProperty(rt, "exports", std::move(exports));

    return std::move(mod);
  }
}
  
